{
  "en": {
    "carbon.listBoxMenuIcon.close.menu": "Close menu",
    "carbon.listBoxMenuIcon.open.menu": "Open menu",
    "carbon.listBoxSelection.clear.all": "Clear all selected items",
    "carbon.listBoxSelection.clear.selection": "Clear selected item",
    "carbon.table.all.collapse": "Collapse all rows",
    "carbon.table.all.expand": "Expand all rows",
    "carbon.table.all.select": "Select all rows",
    "carbon.table.all.unselect": "Unselect all rows",
    "carbon.table.batch.cancel": "Cancel",
    "carbon.table.batch.item.selected": "1 item selected",
    "carbon.table.batch.items.selected": "{totalSelected, plural, other {# items}} selected",
    "carbon.table.row.collapse": "Collapse current row",
    "carbon.table.row.expand": "Expand current row",
    "carbon.table.row.select": "Select row",
    "carbon.table.row.unselect": "Unselect row",
    "dashboard.about.description": "Tekton is a powerful and flexible open-source framework for creating CI/CD systems, allowing developers to build, test, and deploy across cloud providers and on-premises systems.",
    "dashboard.about.documentation": "Documentation and resources",
    "dashboard.about.environmentDetails": "Environment details",
    "dashboard.about.error": "Error getting data",
    "dashboard.about.isReadOnly": "ReadOnly",
    "dashboard.about.logoutURL": "LogoutURL",
    "dashboard.about.missingProperties": "Could not find: {errorsFound}",
    "dashboard.about.title": "About Tekton",
    "dashboard.about.true": "True",
    "dashboard.about.version": "Version",
    "dashboard.actions.createButton": "Create",
    "dashboard.actions.createRunButton": "Create {kind}",
    "dashboard.actions.deleteButton": "Delete",
    "dashboard.app.loadingConfigError": "Error loading configuration",
    "dashboard.cancelPipelineRun.actionText": "Stop",
    "dashboard.cancelPipelineRun.body": "Are you sure you would like to stop PipelineRun {name}?",
    "dashboard.cancelPipelineRun.cancelled.description": "Interrupt any currently executing tasks and skip finally tasks",
    "dashboard.cancelPipelineRun.cancelledRunFinally.description": "Interrupt any currently executing non-finally tasks, then execute finally tasks",
    "dashboard.cancelPipelineRun.heading": "Stop PipelineRun",
    "dashboard.cancelPipelineRun.primaryText": "Stop PipelineRun",
    "dashboard.cancelPipelineRun.stoppedRunFinally.description": "Allow any currently executing tasks to complete but do not schedule any new non-finally tasks, then execute finally tasks",
    "dashboard.cancelRun.body": "Are you sure you would like to stop Run {name}?",
    "dashboard.cancelRun.heading": "Stop Run",
    "dashboard.cancelRun.primaryText": "Stop Run",
    "dashboard.cancelTaskRun.actionText": "Stop",
    "dashboard.cancelTaskRun.body": "Are you sure you would like to stop TaskRun {name}?",
    "dashboard.cancelTaskRun.heading": "Stop TaskRun",
    "dashboard.cancelTaskRun.primaryText": "Stop TaskRun",
    "dashboard.clipboard.copied": "Copied!",
    "dashboard.clipboard.copyStatusMessage": "Copy status message to clipboard",
    "dashboard.clusterTasks.errorLoading": "Error loading ClusterTasks",
    "dashboard.clusterTasksDropdown.empty": "No ClusterTasks found",
    "dashboard.clusterTasksDropdown.label": "Select ClusterTask",
    "dashboard.clusterTriggerBinding.noParams": "No parameters found for this ClusterTriggerBinding.",
    "dashboard.createPipelineResource.name": "pipeline-resource-name",
    "dashboard.createPipelineResource.nameLabel": "Name",
    "dashboard.createPipelineResource.namespaceError": "Namespace required",
    "dashboard.createPipelineResource.revision": "pipeline-resource-revision",
    "dashboard.createPipelineResource.revisionError": "Revision required",
    "dashboard.createPipelineResource.revisionLabel": "Revision",
    "dashboard.createPipelineResource.title": "Create PipelineResource",
    "dashboard.createPipelineResource.type": "Type",
    "dashboard.createPipelineResource.url": "pipeline-resource-url",
    "dashboard.createPipelineResource.urlError": "URL required",
    "dashboard.createPipelineResource.urlLabel": "URL",
    "dashboard.createPipelineRun.createError": "Error creating PipelineRun",
    "dashboard.createPipelineRun.disabled": "Disabled",
    "dashboard.createPipelineRun.enabled": "Enabled",
    "dashboard.createPipelineRun.errorLoading": "Error retrieving Pipeline information",
    "dashboard.createPipelineRun.invalidPipeline": "Pipeline cannot be empty",
    "dashboard.createPipelineRun.serviceAccountHelperText": "Ensure the selected ServiceAccount (or the default if none selected) has permissions for creating PipelineRuns and for anything else your PipelineRun interacts with.",
    "dashboard.createPipelineRun.status.pending": "Create PipelineRun in pending state",
    "dashboard.createPipelineRun.timeoutHelperText": "PipelineRun timeout in minutes",
    "dashboard.createPipelineRun.title": "Create PipelineRun",
    "dashboard.createResource.nameError": "Must consist of lower case alphanumeric characters, '-' or '.', start and end with an alphanumeric character, and be at most 63 characters",
    "dashboard.createRun.invalidNamespace": "Namespace cannot be empty",
    "dashboard.createRun.invalidParams": "Params cannot be empty",
    "dashboard.createRun.invalidPipelineResources": "PipelineResources cannot be empty",
    "dashboard.createRun.invalidTimeout": "Timeout must be a valid number less than 525600",
    "dashboard.createRun.label.invalidText": "Labels must follow the {0}kubernetes labels syntax{1}.",
    "dashboard.createRun.labels.legendText": "Labels",
    "dashboard.createRun.nodeSelector.legendText": "Node selector",
    "dashboard.createRun.optional.legendText": "Optional values",
    "dashboard.createRun.pipelineRunNameLabel": "PipelineRun name",
    "dashboard.createRun.taskRunNameLabel": "TaskRun name",
    "dashboard.createRun.timeoutLabel": "Timeout",
    "dashboard.createRun.validationError": "Please fix the fields with errors, then resubmit",
    "dashboard.createTaskRun.createError": "Error creating TaskRun",
    "dashboard.createTaskRun.errorLoading": "Error retrieving Task information",
    "dashboard.createTaskRun.invalidTask": "Task cannot be empty",
    "dashboard.createTaskRun.serviceAccountHelperText": "Ensure the selected ServiceAccount (or the default if none selected) has permissions for creating TaskRuns and for anything else your TaskRun interacts with.",
    "dashboard.createTaskRun.timeoutHelperText": "TaskRun timeout in minutes",
    "dashboard.createTaskRun.title": "Create TaskRun",
    "dashboard.customTask.heading": "Custom Task",
    "dashboard.deletePipelineRun.body": "Are you sure you would like to delete PipelineRun {name}?",
    "dashboard.deleteResources.confirm": "Are you sure you want to delete these {kind}?",
    "dashboard.deleteResources.heading": "Delete {kind}",
    "dashboard.deleteRun.body": "Are you sure you would like to delete Run {name}?",
    "dashboard.deleteTaskRun.body": "Are you sure you would like to delete TaskRun {name}?",
    "dashboard.emptyState.allNamespaces": "No matching {kind} found",
    "dashboard.emptyState.clusterResource": "No matching {kind} found",
    "dashboard.emptyState.selectedNamespace": "No matching {kind} found in namespace {selectedNamespace}",
    "dashboard.error.title": "Error:",
    "dashboard.errorBoundary.defaultError": "Something went wrong",
    "dashboard.errorBoundary.pageError": "Error loading page",
    "dashboard.eventListener.namespaceSelector": "Namespace selector:",
    "dashboard.eventListener.serviceAccount": "ServiceAccount:",
    "dashboard.eventListener.serviceType": "Service type:",
    "dashboard.extension.error": "Error loading extension",
    "dashboard.extensions.emptyState": "No extensions found",
    "dashboard.extensions.errorLoading": "Error loading extensions",
    "dashboard.extensions.title": "Extensions",
    "dashboard.filter.all": "All",
    "dashboard.filter.status.title": "Status:",
    "dashboard.graph.pan": "Pan",
    "dashboard.graph.select": "Select",
    "dashboard.graph.zoomIn": "Zoom in",
    "dashboard.graph.zoomOut": "Zoom out",
    "dashboard.header.closeNavMenu": "Close menu",
    "dashboard.header.logOut": "Log out",
    "dashboard.header.openNavMenu": "Open menu",
    "dashboard.home.title": "Home",
    "dashboard.importResources.advanced.accordionText": "Advanced configuration for the Import PipelineRun",
    "dashboard.importResources.heading": "Import resources from repository",
    "dashboard.importResources.importApplyButton": "Import",
    "dashboard.importResources.importerNamespace.helperText": "The namespace in which the PipelineRun fetching the repository and creating the resources will run",
    "dashboard.importResources.method.helperText": "If any of the resources being imported use 'generateName' rather than 'name' in their metadata, select 'create' so they can be imported correctly.",
    "dashboard.importResources.method.label": "Method",
    "dashboard.importResources.path.helperText": "The path of the Tekton resources to import from the repository. Leave blank if the resources are at the top-level directory.",
    "dashboard.importResources.path.labelText": "Repository path (optional)",
    "dashboard.importResources.path.placeholder": "Enter repository path",
    "dashboard.importResources.repo.helperText": "The location of the YAML definitions to be applied (Git URLs supported)",
    "dashboard.importResources.repo.invalidText": "Please enter a valid Git URL",
    "dashboard.importResources.repo.labelText": "Repository URL",
    "dashboard.importResources.revision.helperText": "The git revision (branch, tag, commit SHA or ref) of the repository to clone. Leave blank to use the default branch.",
    "dashboard.importResources.revision.labelText": "Revision (optional)",
    "dashboard.importResources.revision.placeholder": "Enter revision",
    "dashboard.importResources.serviceAccount.helperText": "The ServiceAccount that the PipelineRun applying resources will run under (from the namespace above). Ensure the selected ServiceAccount (or the default if none selected) has permissions for creating PipelineRuns and for anything else your PipelineRun interacts with, including any Tekton resources in the Git repository.",
    "dashboard.importResources.targetNamespace.helperText": "The namespace in which the resources will be created",
    "dashboard.importResources.targetNamespace.titleText": "Target namespace",
    "dashboard.importResources.title": "Import resources",
    "dashboard.importResources.triggeredNotification": "Triggered PipelineRun to import Tekton resources",
    "dashboard.keyValueList.add": "Add",
    "dashboard.keyValueList.remove": "Remove",
    "dashboard.labelFilter.addFilterButton": "Add filter",
    "dashboard.labelFilter.clearAll": "Clear all",
    "dashboard.labelFilter.duplicate": "No duplicate filters allowed",
    "dashboard.labelFilter.invalid": "Filters must be of the format labelKey:labelValue and contain accepted label characters",
    "dashboard.labelFilter.invalidLength": "Filters must be of the format labelKey:labelValue and contain less than 64 characters",
    "dashboard.labelFilter.searchPlaceholder": "Input a label filter of the format labelKey:labelValue",
    "dashboard.labelFilter.syntaxMessage": "See the Kubernetes Label documentation for valid syntax",
    "dashboard.lastUpdated": "Last updated {time}",
    "dashboard.list.menu.tooltip": "Actions",
    "dashboard.loading": "Loading…",
    "dashboard.loading.config": "Loading configuration…",
    "dashboard.logo.alt": "Tekton logo",
    "dashboard.logo.tooltip": "Meow",
    "dashboard.logs.downloadButtonTooltip": "Download logs",
    "dashboard.logs.launchButtonTooltip": "Open logs in a new window",
    "dashboard.logs.maximize": "Maximize",
    "dashboard.logs.pending": "Final logs pending",
    "dashboard.logs.restore": "Return to default",
    "dashboard.logs.scrollToBottom": "Scroll to end of logs",
    "dashboard.logs.scrollToTop": "Scroll to start of logs",
    "dashboard.logs.showTimestamps.label": "Show log timestamps",
    "dashboard.metadata.dateCreated": "Date created:",
    "dashboard.metadata.labels": "Labels:",
    "dashboard.metadata.namespace": "Namespace:",
    "dashboard.metadata.none": "None",
    "dashboard.modal.cancelButton": "Cancel",
    "dashboard.modal.close": "Close",
    "dashboard.namespacesDropdown.allNamespaces": "All Namespaces",
    "dashboard.namespacesDropdown.empty": "No Namespaces found",
    "dashboard.namespacesDropdown.invalidText": "Please select a Namespace",
    "dashboard.namespacesDropdown.label": "Select Namespace",
    "dashboard.notFound.description": "We couldn’t find the page you were looking for, but here are some helpful links instead:",
    "dashboard.notFound.title": "Oops… Page not found",
    "dashboard.notification.clear": "Clear notification",
    "dashboard.pagination.nextPage": "Next page",
    "dashboard.pagination.pageSize": "Items per page:",
    "dashboard.pagination.previousPage": "Previous page",
    "dashboard.parameters.title": "Parameters",
    "dashboard.pipelineResource.fieldName": "Field name",
    "dashboard.pipelineResource.secretKey": "Secret key",
    "dashboard.pipelineResource.secretName": "Secret name",
    "dashboard.pipelineResource.type": "Type:",
    "dashboard.pipelineResources.error": "Error loading PipelineResources",
    "dashboard.pipelineResourcesDropdown.empty.allNamespaces": "No PipelineResources found",
    "dashboard.pipelineResourcesDropdown.empty.allNamespaces.type": "No PipelineResources found of type ''{type}''",
    "dashboard.pipelineResourcesDropdown.empty.selectedNamespace": "No PipelineResources found in the ''{namespace}'' namespace",
    "dashboard.pipelineResourcesDropdown.empty.selectedNamespace.type": "No PipelineResources found of type ''{type}'' in the ''{namespace}'' namespace",
    "dashboard.pipelineResourcesDropdown.label": "Select PipelineResource",
    "dashboard.pipelineRun.error": "Error loading PipelineRun",
    "dashboard.pipelineRun.failed": "Cannot load PipelineRun",
    "dashboard.pipelineRun.failedMessage": "Unable to load PipelineRun: {reason}",
    "dashboard.pipelineRun.logEmpty": "No log available",
    "dashboard.pipelineRun.logFailed": "Unable to fetch log",
    "dashboard.pipelineRun.notFound": "PipelineRun not found",
    "dashboard.pipelineRun.pipelineTaskName.retry": "{pipelineTaskName} (retry {retryNumber, number})",
    "dashboard.pipelineRun.stepCompleted": "Step completed successfully",
    "dashboard.pipelineRun.stepCompleted.exitCode": "Step completed with exit code {exitCode}",
    "dashboard.pipelineRun.stepFailed": "Step failed",
    "dashboard.pipelineRuns.error": "Error loading PipelineRuns",
    "dashboard.pipelines.errorLoading": "Error loading Pipelines",
    "dashboard.pipelinesDropdown.empty.allNamespaces": "No Pipelines found",
    "dashboard.pipelinesDropdown.empty.selectedNamespace": "No Pipelines found in the ''{namespace}'' namespace",
    "dashboard.pipelinesDropdown.label": "Select Pipeline",
    "dashboard.pod.events": "Events",
    "dashboard.pod.resource": "Resource",
    "dashboard.pod.resource.empty": "Waiting for Pod resource",
    "dashboard.rerun.actionText": "Rerun",
    "dashboard.rerun.error": "An error occurred when rerunning {runName}: check the dashboard logs for details. Status code: {statusCode}",
    "dashboard.rerun.triggered": "Triggered rerun",
    "dashboard.resource.apiVersion": "API version:",
    "dashboard.resource.createdTime": "Created: {created}",
    "dashboard.resource.detailsTab": "Details",
    "dashboard.resource.kind": "Kind:",
    "dashboard.resource.name": "Name:",
    "dashboard.resource.overviewTab": "Overview",
    "dashboard.resourceDetails.ariaLabel": "Resource details",
    "dashboard.resourceDetails.description": "Description",
    "dashboard.resourceDetails.errorloading": "Error loading resource",
    "dashboard.resourceList.emptyState": "No matching resources found for type {type}",
    "dashboard.resourceList.errorLoading": "Error loading {type}",
    "dashboard.resourceList.viewRuns": "View {kind} of {resource}",
    "dashboard.run.duration": "Duration: {duration}",
    "dashboard.run.duration.label": "Duration:",
    "dashboard.run.rerunStatusMessage": "View status",
    "dashboard.runs.error": "Error loading Runs",
    "dashboard.serviceAccountLabel.optional": "ServiceAccount (optional)",
    "dashboard.serviceAccountsDropdown.empty.allNamespaces": "No ServiceAccounts found",
    "dashboard.serviceAccountsDropdown.empty.selectedNamespace": "No ServiceAccounts found in the ''{namespace}'' namespace",
    "dashboard.serviceAccountsDropdown.label": "Select ServiceAccount",
    "dashboard.settings.title": "Settings",
    "dashboard.sideNav.kubernetesResources": "Kubernetes resources",
    "dashboard.sideNav.tektonResources": "Tekton resources",
    "dashboard.skipToContent": "Skip to main content",
    "dashboard.startPipelineRun.actionText": "Start",
    "dashboard.step.definitionNotAvailable": "Step definition not available",
    "dashboard.step.statusNotAvailable": "Status not available",
    "dashboard.stepDefinition.inputResources": "Input resources",
    "dashboard.stepDefinition.outputResources": "Output resources",
    "dashboard.tableHeader.createdTime": "Created",
    "dashboard.tableHeader.default": "Default",
    "dashboard.tableHeader.expression": "Expression",
    "dashboard.tableHeader.key": "Key",
    "dashboard.tableHeader.name": "Name",
    "dashboard.tableHeader.pipeline": "Pipeline",
    "dashboard.tableHeader.status": "Status",
    "dashboard.tableHeader.task": "Task",
    "dashboard.tableHeader.type": "Type",
    "dashboard.tableHeader.value": "Value",
    "dashboard.taskRun.errorLoading": "Error loading TaskRun",
    "dashboard.taskRun.logs": "Logs",
    "dashboard.taskRun.params": "Parameters",
    "dashboard.taskRun.resources": "Resources",
    "dashboard.taskRun.results": "Results",
    "dashboard.taskRun.status": "Status",
    "dashboard.taskRun.status.cancelled": "Cancelled",
    "dashboard.taskRun.status.failed": "Failed",
    "dashboard.taskRun.status.notRun": "Not run",
    "dashboard.taskRun.status.pending": "Pending",
    "dashboard.taskRun.status.running": "Running",
    "dashboard.taskRun.status.succeeded": "Completed",
    "dashboard.taskRun.status.succeeded.warning": "Completed with exit code {exitCode}",
    "dashboard.taskRun.status.waiting": "Waiting",
    "dashboard.taskRun.unavailable": "TaskRun not available",
    "dashboard.taskRunParams.name": "Name",
    "dashboard.taskRunParams.value": "Value",
    "dashboard.taskRuns.errorLoading": "Error loading TaskRuns",
    "dashboard.tasks.errorLoading": "Error loading Tasks",
    "dashboard.tasksDropdown.empty.allNamespaces": "No Tasks found",
    "dashboard.tasksDropdown.empty.selectedNamespace": "No Tasks found in the ''{namespace}'' namespace",
    "dashboard.tasksDropdown.label": "Select Task",
    "dashboard.theme.dark": "Dark",
    "dashboard.theme.label": "Theme",
    "dashboard.theme.light": "Light",
    "dashboard.theme.system": "System",
    "dashboard.toggle.off": "Off",
    "dashboard.toggle.on": "On",
    "dashboard.tooltipDropdown.empty": "No items found",
    "dashboard.trigger.noHeaders": "No headers found for this interceptor.",
    "dashboard.trigger.noOverlays": "No overlays found for this interceptor.",
    "dashboard.triggerBinding.noParams": "No parameters found for this TriggerBinding.",
    "dashboard.triggerDetails.celInterceptorFilter": "Filter:",
    "dashboard.triggerDetails.celInterceptorOverlays": "Overlays:",
    "dashboard.triggerDetails.interceptorHeader": "Header:",
    "dashboard.triggerDetails.interceptorName": "Name:",
    "dashboard.triggerDetails.interceptorNamespace": "Namespace:",
    "dashboard.triggerDetails.interceptorTitle": "{interceptorNumber}. ({interceptorType}) {interceptorName}",
    "dashboard.triggerDetails.interceptors": "Interceptors:",
    "dashboard.triggerDetails.triggerBindings": "TriggerBindings:",
    "dashboard.triggerDetails.triggerTemplate": "TriggerTemplate:",
    "dashboard.triggerDetails.webhookInterceptorSecret": "Secret:",
    "dashboard.triggerDetails.webhookInterceptorSecretKey": "Key:",
    "dashboard.triggerDetails.webhookInterceptorService": "Service:",
    "dashboard.triggerTemplate.noParams": "No parameters found for this template.",
    "dashboard.triggerTemplate.resourceTemplates": "Resource templates",
    "react-intl-formatted-duration.daysUnit": "{value, plural, one {day} other {days}}",
    "react-intl-formatted-duration.duration": "{value} {unit}",
    "react-intl-formatted-duration.hoursUnit": "{value, plural, one {hour} other {hours}}",
    "react-intl-formatted-duration.minutesUnit": "{value, plural, one {minute} other {minutes}}",
    "react-intl-formatted-duration.secondsUnit": "{value, plural, one {second} other {seconds}}"
  }
}