name: Tekton CI

permissions:
  contents: read

on:
  pull_request:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build tests
    runs-on: ubuntu-24.04

    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: ''

    steps:
      - name: Harden runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: ${{ github.workspace }}/src/github.com/tektoncd/dashboard

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          cache-dependency-path: "${{ github.workspace }}/src/github.com/tektoncd/dashboard/go.sum"
          go-version-file: "${{ github.workspace }}/src/github.com/tektoncd/dashboard/go.mod"

      - name: Install dependencies
        run: |
          echo "${GOPATH}/bin" >> "$GITHUB_PATH"
          GO111MODULE="on" go install github.com/google/go-licenses@v1.0.0

          # Install GolangCI linter: https://github.com/golangci/golangci-lint/
          GOLANGCI_VERSION=1.64.8
          curl -sL https://github.com/golangci/golangci-lint/releases/download/v${GOLANGCI_VERSION}/golangci-lint-${GOLANGCI_VERSION}-linux-amd64.tar.gz | tar -C /usr/local/bin -xvzf - --strip-components=1 --wildcards "*/golangci-lint"

      - name: Run tests
        working-directory: ${{ github.workspace }}/src/github.com/tektoncd/dashboard
        run: |
          ./test/presubmit-tests.sh --build-tests

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-24.04

    steps:
      - name: Harden runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache: npm
          node-version-file: .nvmrc
          registry-url: 'https://registry.npmjs.org/'

      - name: Run tests
        run: |
          ./test/presubmit-tests.sh --unit-tests

  e2e-tests:
    name: E2E tests
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        k8s-name:
          - k8s-oldest
          - k8s-plus-one

        dashboard-mode:
          - read-only
          - read-write

        # k8s-name above is used to give stable naming of the checks for branch
        # protection config. Map name to corresponding version for use in steps
        include:
          - k8s-name: k8s-oldest
            k8s-version: v1.31.x
          - k8s-name: k8s-plus-one
            k8s-version: v1.32.x

    env:
      ARTIFACTS: ${{ github.workspace }}/artifacts
      GOPATH: ${{ github.workspace }}
      GO111MODULE: on
      KO_DOCKER_REPO: kind.local

    steps:
      - name: Harden runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: ${{ github.workspace }}/src/github.com/tektoncd/dashboard

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          cache-dependency-path: "${{ github.workspace }}/src/github.com/tektoncd/dashboard/go.sum"
          go-version-file: "${{ github.workspace }}/src/github.com/tektoncd/dashboard/go.mod"

      - name: Set up Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache: npm
          cache-dependency-path: src/github.com/tektoncd/dashboard/package-lock.json
          node-version-file: src/github.com/tektoncd/dashboard/.nvmrc
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        working-directory: ./
        env:
          GO111MODULE: "on"
        run: |
          echo '::group::install ko'
          curl -L https://github.com/ko-build/ko/releases/download/v0.15.4/ko_0.15.4_Linux_x86_64.tar.gz | tar xzf - ko
          chmod +x ./ko
          sudo mv ko /usr/local/bin
          echo '::endgroup::'

          echo '::group::install kind'
          go install sigs.k8s.io/kind@v0.27.0
          echo '::endgroup::'

          echo '::group::create required folders'
          mkdir -p "${ARTIFACTS}"
          echo '::endgroup::'

          echo "${GOPATH}/bin" >> "$GITHUB_PATH"

      - name: Run tests
        working-directory: ${{ github.workspace }}/src/github.com/tektoncd/dashboard
        env:
          DASHBOARD_MODE: ${{ matrix.dashboard-mode }}
          SKIP_INITIALIZE: true
        run: |
          ./test/e2e-tests-prow.sh \
            --k8s-version ${{ matrix.k8s-version }} \

      - name: Upload test results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ failure() }}
        with:
          name: ${{ matrix.k8s-version }}-${{ matrix.dashboard-mode }}
          path: ${{ env.ARTIFACTS }}

      # - name: Collect resources from cluster
      #   uses: chainguard-dev/actions/kind-diag@94389dc7faf4ef9040df90498419535e1bdcb60e # main
      #   if: ${{ failure() }}
      #   with:
      #     artifact-name: ${{ matrix.k8s-version }}-${{ matrix.dashboard-mode }}-logs
      #     namespace-resources: pods,taskruns,pipelineruns
