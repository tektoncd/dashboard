apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: tekton-dashboard
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: tekton-dashboard
    name: tekton-dashboard
    namespace: tekton-piplines
  spec:
    replicas: 1
    selector:
      app: tekton-dashboard
      deploymentconfig: tekton-dashboard
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 6000
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: tekton-dashboard
          deploymentconfig: tekton-dashboard
      spec:
        containers:
        - env:
          image: "tekton-pipelines/tekton-dashboard"
          imagePullPolicy: Always
          name: tekton-dashboard
          env:
          - name: PORT
            value: "9097"
          - name: WEB_RESOURCES_DIR
            value: ./web
          - name: PIPELINE_RUN_SERVICE_ACCOUNT
            value: ""
          - name: INSTALLED_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          ports:
          - containerPort: 9097
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 9097
          readinessProbe:
            httpGet:
              path: /readiness
              port: 9097
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - tekton-dashboard
        from:
          kind: ImageStreamTag
          name: tekton-dashboard:latest
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: tekton-dashboard
    name: tekton-dashboard
    namespace: tekton-pipelines
  spec:
    ports:
      - name: dashboard
        port: 9097
        protocol: TCP
        targetPort: 9097
    selector:
      app: tekton-dashboard
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: tekton-dashboard
    name: tekton-dashboard
    namespace: tekton-pipelines
  spec:
    port:
      targetPort: dashboard
    to:
      kind: Service
      name: tekton-dashboard
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: tekton-dashboard
    name: tekton-dashboard
    namespace: tekton-pipelines



