---
apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: tekton-dashboard
objects:
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        app: tekton-dashboard
      name: tekton-dashboard
      namespace: tekton-pipelines
  - kind: CustomResourceDefinition
    apiVersion: apiextensions.k8s.io/v1beta1
    metadata:
      name: extensions.dashboard.tekton.dev
    spec:
      group: dashboard.tekton.dev
      names:
        kind: Extension
        plural: extensions
        categories:
          - tekton
          - tekton-dashboard
      scope: Namespaced
      # Opt into the status subresource so metadata.generation
      # starts to increment
      subresources:
        status: {}
      version: v1alpha1
  - kind: ClusterRole
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: tekton-dashboard-minimal
    rules:
      - apiGroups: [""]
        resources: ["serviceaccounts"]
        verbs: ["get", "list", "update"]
      - apiGroups: [""]
        resources: ["pods", "services"]
        verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
      - apiGroups: [""]
        resources: ["pods/log", "secrets", "namespaces", "events"]
        verbs: ["get", "list", "watch"]
      - apiGroups: ["extensions", "apps"]
        resources: ["deployments"]
        verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
      - apiGroups: ["tekton.dev"]
        resources: ["tasks", "clustertasks", "taskruns", "pipelines",
                    "pipelineruns", "pipelineresources"]
        verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
      - apiGroups: ["tekton.dev"]
        resources: ["taskruns/finalizers", "pipelineruns/finalizers"]
        verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
      - apiGroups: ["tekton.dev"]
        resources: ["tasks/status", "clustertasks/status", "taskruns/status",
                    "pipelines/status", "pipelineruns/status"]
        verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
      - apiGroups: ["dashboard.tekton.dev"]
        resources: ["extensions"]
        verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: tekton-dashboard-minimal
    subjects:
      - kind: ServiceAccount
        name: tekton-dashboard
        namespace: tekton-pipelines
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: tekton-dashboard-minimal
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: tekton-dashboard
      name: tekton-dashboard
      namespace: tekton-piplines
    spec:
      replicas: 1
      selector:
        app: tekton-dashboard
        deploymentconfig: tekton-dashboard
      strategy:
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 6000
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: tekton-dashboard
            deploymentconfig: tekton-dashboard
        spec:
          serviceAccountName: tekton-dashboard
          containers:
            - name: tekton-dashboard
              image: "tekton-pipelines/tekton-dashboard"
              imagePullPolicy: Always
              env:
                - name: PORT
                  value: "9097"
                - name: WEB_RESOURCES_DIR
                  value: ./web
                - name: PIPELINE_RUN_SERVICE_ACCOUNT
                  value: ""
                - name: INSTALLED_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              ports:
                - containerPort: 9097
                  protocol: TCP
              livenessProbe:
                httpGet:
                  path: /health
                  port: 9097
              readinessProbe:
                httpGet:
                  path: /readiness
                  port: 9097
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - tekton-dashboard
            from:
              kind: ImageStreamTag
              name: tekton-dashboard:latest
        - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: tekton-dashboard
      name: tekton-dashboard
      namespace: tekton-pipelines
    spec:
      ports:
        - name: dashboard
          port: 9097
          protocol: TCP
          targetPort: 9097
      selector:
        app: tekton-dashboard
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: tekton-dashboard
      name: tekton-dashboard
      namespace: tekton-pipelines
    spec:
      port:
        targetPort: dashboard
      to:
        kind: Service
        name: tekton-dashboard
        weight: 100
      wildcardPolicy: None
  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        application: tekton-dashboard
      name: tekton-dashboard
      namespace: tekton-pipelines
  - apiVersion: tekton.dev/v1alpha1
    kind: Pipeline
    metadata:
      name: pipeline0
      namespace: tekton-pipelines
    spec:
      resources:
        - name: git-source
          type: git
      params:
        - name: pathToResourceFiles
          description: The path to the resource files to apply
          default: /workspace/git-source
        - name: apply-directory
          description: The directory from which resources are to be applied
          default: "."
      tasks:
        - name: pipeline0-task
          taskRef:
            name: pipeline0-task
          params:
            - name: pathToResourceFiles
              value: ${params.pathToResourceFiles}
            - name: apply-directory
              value: ${params.apply-directory}
          resources:
            inputs:
              - name: git-source
                resource: git-source
  - apiVersion: tekton.dev/v1alpha1
    kind: Task
    metadata:
      name: pipeline0-task
      namespace: tekton-pipelines
    spec:
      inputs:
        resources:
          - name: git-source
            type: git
        params:
          - name: pathToResourceFiles
            description: The path to the resource files to apply
            default: /workspace/git-source
          - name: apply-directory
            description: The directory from which resources are to be applied
            default: "."
      steps:
        - name: kubectl-apply
          image: lachlanevenson/k8s-kubectl
          command:
            - kubectl
          args:
            - apply
            - -f
            - ${inputs.params.pathToResourceFiles}/${inputs.params.apply-directory}
